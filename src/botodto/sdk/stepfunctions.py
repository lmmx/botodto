# generated by datamodel-codegen:
#   filename:  openapi.yaml
#   timestamp: 2023-06-13T00:15:58+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, SecretStr, confloat, conint, constr


class ActivityLimitExceeded(BaseModel):
    __root__: Any


class InvalidName(BaseModel):
    __root__: Any


class TooManyTags(BaseModel):
    __root__: Any


class InvalidArn(BaseModel):
    __root__: Any


class InvalidDefinition(BaseModel):
    __root__: Any


class InvalidLoggingConfiguration(BaseModel):
    __root__: Any


class InvalidTracingConfiguration(BaseModel):
    __root__: Any


class StateMachineAlreadyExists(BaseModel):
    __root__: Any


class StateMachineDeleting(BaseModel):
    __root__: Any


class StateMachineLimitExceeded(BaseModel):
    __root__: Any


class StateMachineTypeNotSupported(BaseModel):
    __root__: Any


class DeleteActivityOutput(BaseModel):
    pass


class DeleteStateMachineOutput(BaseModel):
    pass


class ValidationException(BaseModel):
    __root__: Any


class ActivityDoesNotExist(BaseModel):
    __root__: Any


class ExecutionDoesNotExist(BaseModel):
    __root__: Any


class ResourceNotFound(BaseModel):
    __root__: Any


class StateMachineDoesNotExist(BaseModel):
    __root__: Any


class ActivityWorkerLimitExceeded(BaseModel):
    __root__: Any


class InvalidToken(BaseModel):
    __root__: Any


class SendTaskFailureOutput(BaseModel):
    pass


class TaskDoesNotExist(BaseModel):
    __root__: Any


class TaskTimedOut(BaseModel):
    __root__: Any


class SendTaskHeartbeatOutput(BaseModel):
    pass


class SendTaskSuccessOutput(BaseModel):
    pass


class InvalidOutput(BaseModel):
    __root__: Any


class ExecutionLimitExceeded(BaseModel):
    __root__: Any


class ExecutionAlreadyExists(BaseModel):
    __root__: Any


class InvalidExecutionInput(BaseModel):
    __root__: Any


class TagResourceOutput(BaseModel):
    pass


class UntagResourceOutput(BaseModel):
    pass


class UpdateMapRunOutput(BaseModel):
    pass


class MissingRequiredParameter(BaseModel):
    __root__: Any


class ActivityFailedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class ActivityScheduleFailedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class ActivityStartedEventDetails(BaseModel):
    workerName: Optional[constr(max_length=256)] = None


class ActivityTimedOutEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class BillingDetails(BaseModel):
    billedMemoryUsedInMB: Optional[conint(ge=0)] = None
    billedDurationInMilliseconds: Optional[conint(ge=0)] = None


class CloudWatchEventsExecutionDataDetails(BaseModel):
    included: Optional[bool] = None


class CloudWatchLogsLogGroup(BaseModel):
    logGroupArn: Optional[constr(min_length=1, max_length=256)] = None


class StateMachineType(Enum):
    STANDARD = "STANDARD"
    EXPRESS = "EXPRESS"


class ExecutionStatus(Enum):
    RUNNING = "RUNNING"
    SUCCEEDED = "SUCCEEDED"
    FAILED = "FAILED"
    TIMED_OUT = "TIMED_OUT"
    ABORTED = "ABORTED"


class MapRunStatus(Enum):
    RUNNING = "RUNNING"
    SUCCEEDED = "SUCCEEDED"
    FAILED = "FAILED"
    ABORTED = "ABORTED"


class StateMachineStatus(Enum):
    ACTIVE = "ACTIVE"
    DELETING = "DELETING"


class ExecutionAbortedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class ExecutionFailedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class ExecutionTimedOutEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class HistoryEventType(Enum):
    ActivityFailed = "ActivityFailed"
    ActivityScheduled = "ActivityScheduled"
    ActivityScheduleFailed = "ActivityScheduleFailed"
    ActivityStarted = "ActivityStarted"
    ActivitySucceeded = "ActivitySucceeded"
    ActivityTimedOut = "ActivityTimedOut"
    ChoiceStateEntered = "ChoiceStateEntered"
    ChoiceStateExited = "ChoiceStateExited"
    ExecutionAborted = "ExecutionAborted"
    ExecutionFailed = "ExecutionFailed"
    ExecutionStarted = "ExecutionStarted"
    ExecutionSucceeded = "ExecutionSucceeded"
    ExecutionTimedOut = "ExecutionTimedOut"
    FailStateEntered = "FailStateEntered"
    LambdaFunctionFailed = "LambdaFunctionFailed"
    LambdaFunctionScheduled = "LambdaFunctionScheduled"
    LambdaFunctionScheduleFailed = "LambdaFunctionScheduleFailed"
    LambdaFunctionStarted = "LambdaFunctionStarted"
    LambdaFunctionStartFailed = "LambdaFunctionStartFailed"
    LambdaFunctionSucceeded = "LambdaFunctionSucceeded"
    LambdaFunctionTimedOut = "LambdaFunctionTimedOut"
    MapIterationAborted = "MapIterationAborted"
    MapIterationFailed = "MapIterationFailed"
    MapIterationStarted = "MapIterationStarted"
    MapIterationSucceeded = "MapIterationSucceeded"
    MapStateAborted = "MapStateAborted"
    MapStateEntered = "MapStateEntered"
    MapStateExited = "MapStateExited"
    MapStateFailed = "MapStateFailed"
    MapStateStarted = "MapStateStarted"
    MapStateSucceeded = "MapStateSucceeded"
    ParallelStateAborted = "ParallelStateAborted"
    ParallelStateEntered = "ParallelStateEntered"
    ParallelStateExited = "ParallelStateExited"
    ParallelStateFailed = "ParallelStateFailed"
    ParallelStateStarted = "ParallelStateStarted"
    ParallelStateSucceeded = "ParallelStateSucceeded"
    PassStateEntered = "PassStateEntered"
    PassStateExited = "PassStateExited"
    SucceedStateEntered = "SucceedStateEntered"
    SucceedStateExited = "SucceedStateExited"
    TaskFailed = "TaskFailed"
    TaskScheduled = "TaskScheduled"
    TaskStarted = "TaskStarted"
    TaskStartFailed = "TaskStartFailed"
    TaskStateAborted = "TaskStateAborted"
    TaskStateEntered = "TaskStateEntered"
    TaskStateExited = "TaskStateExited"
    TaskSubmitFailed = "TaskSubmitFailed"
    TaskSubmitted = "TaskSubmitted"
    TaskSucceeded = "TaskSucceeded"
    TaskTimedOut = "TaskTimedOut"
    WaitStateAborted = "WaitStateAborted"
    WaitStateEntered = "WaitStateEntered"
    WaitStateExited = "WaitStateExited"
    MapRunAborted = "MapRunAborted"
    MapRunFailed = "MapRunFailed"
    MapRunStarted = "MapRunStarted"
    MapRunSucceeded = "MapRunSucceeded"


class TaskFailedEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class TaskStartFailedEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class TaskStartedEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)


class TaskSubmitFailedEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class TaskTimedOutEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class MapStateStartedEventDetails(BaseModel):
    length: Optional[conint(ge=0)] = None


class MapIterationEventDetails(BaseModel):
    name: Optional[constr(min_length=1, max_length=80)] = None
    index: Optional[conint(ge=0)] = None


class LambdaFunctionFailedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class LambdaFunctionScheduleFailedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class LambdaFunctionStartFailedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class LambdaFunctionTimedOutEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class MapRunStartedEventDetails(BaseModel):
    mapRunArn: Optional[constr(min_length=1, max_length=2000)] = None


class MapRunFailedEventDetails(BaseModel):
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class TaskCredentials(BaseModel):
    roleArn: Optional[constr(min_length=1, max_length=2000)] = None


class LogDestination(BaseModel):
    cloudWatchLogsLogGroup: Optional[CloudWatchLogsLogGroup] = None


class LogLevel(Enum):
    ALL = "ALL"
    ERROR = "ERROR"
    FATAL = "FATAL"
    OFF = "OFF"


class MapRunListItem(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    mapRunArn: constr(min_length=1, max_length=2000)
    stateMachineArn: constr(min_length=1, max_length=256)
    startDate: datetime
    stopDate: Optional[datetime] = None


class SyncExecutionStatus(Enum):
    SUCCEEDED = "SUCCEEDED"
    FAILED = "FAILED"
    TIMED_OUT = "TIMED_OUT"


class StateMachineListItem(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)
    name: constr(min_length=1, max_length=80)
    type: StateMachineType
    creationDate: datetime


class Tag(BaseModel):
    key: Optional[constr(min_length=1, max_length=128)] = None
    value: Optional[constr(min_length=0, max_length=256)] = None


class CreateActivityOutput(BaseModel):
    activityArn: constr(min_length=1, max_length=256)
    creationDate: datetime


class CreateStateMachineOutput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)
    creationDate: datetime


class DeleteActivityInput(BaseModel):
    activityArn: constr(min_length=1, max_length=256)


class DeleteStateMachineInput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)


class DescribeActivityOutput(BaseModel):
    activityArn: constr(min_length=1, max_length=256)
    name: constr(min_length=1, max_length=80)
    creationDate: datetime


class DescribeActivityInput(BaseModel):
    activityArn: constr(min_length=1, max_length=256)


class DescribeExecutionOutput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    stateMachineArn: constr(min_length=1, max_length=256)
    name: Optional[constr(min_length=1, max_length=80)] = None
    status: ExecutionStatus
    startDate: datetime
    stopDate: Optional[datetime] = None
    input: Optional[SecretStr] = None
    inputDetails: Optional[CloudWatchEventsExecutionDataDetails] = None
    output: Optional[SecretStr] = None
    outputDetails: Optional[CloudWatchEventsExecutionDataDetails] = None
    traceHeader: Optional[
        constr(regex=r"[\x00-\x7F]*", min_length=0, max_length=256)
    ] = None
    mapRunArn: Optional[constr(min_length=1, max_length=2000)] = None
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class DescribeExecutionInput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)


class DescribeMapRunInput(BaseModel):
    mapRunArn: constr(min_length=1, max_length=2000)


class DescribeStateMachineInput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)


class DescribeStateMachineForExecutionInput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)


class GetActivityTaskOutput(BaseModel):
    taskToken: Optional[constr(min_length=1, max_length=1024)] = None
    input: Optional[SecretStr] = None


class GetActivityTaskInput(BaseModel):
    activityArn: constr(min_length=1, max_length=256)
    workerName: Optional[constr(min_length=1, max_length=80)] = None


class GetExecutionHistoryInput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    maxResults: Optional[conint(ge=0, le=1000)] = None
    reverseOrder: Optional[bool] = None
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None
    includeExecutionData: Optional[bool] = None


class ListActivitiesInput(BaseModel):
    maxResults: Optional[conint(ge=0, le=1000)] = None
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None


class ListExecutionsInput(BaseModel):
    stateMachineArn: Optional[constr(min_length=1, max_length=256)] = None
    statusFilter: Optional[ExecutionStatus] = None
    maxResults: Optional[conint(ge=0, le=1000)] = None
    nextToken: Optional[constr(min_length=1, max_length=3096)] = None
    mapRunArn: Optional[constr(min_length=1, max_length=2000)] = None


class ListMapRunsInput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    maxResults: Optional[conint(ge=0, le=1000)] = None
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None


class ListStateMachinesInput(BaseModel):
    maxResults: Optional[conint(ge=0, le=1000)] = None
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None


class ListTagsForResourceInput(BaseModel):
    resourceArn: constr(min_length=1, max_length=256)


class SendTaskFailureInput(BaseModel):
    taskToken: constr(min_length=1, max_length=1024)
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class SendTaskHeartbeatInput(BaseModel):
    taskToken: constr(min_length=1, max_length=1024)


class SendTaskSuccessInput(BaseModel):
    taskToken: constr(min_length=1, max_length=1024)
    output: SecretStr


class StartExecutionOutput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    startDate: datetime


class StartExecutionInput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)
    name: Optional[constr(min_length=1, max_length=80)] = None
    input: Optional[SecretStr] = None
    traceHeader: Optional[
        constr(regex=r"[\x00-\x7F]*", min_length=0, max_length=256)
    ] = None


class StartSyncExecutionOutput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    stateMachineArn: Optional[constr(min_length=1, max_length=256)] = None
    name: Optional[constr(min_length=1, max_length=80)] = None
    startDate: datetime
    stopDate: datetime
    status: SyncExecutionStatus
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None
    input: Optional[SecretStr] = None
    inputDetails: Optional[CloudWatchEventsExecutionDataDetails] = None
    output: Optional[SecretStr] = None
    outputDetails: Optional[CloudWatchEventsExecutionDataDetails] = None
    traceHeader: Optional[
        constr(regex=r"[\x00-\x7F]*", min_length=0, max_length=256)
    ] = None
    billingDetails: Optional[BillingDetails] = None


class StartSyncExecutionInput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)
    name: Optional[constr(min_length=1, max_length=80)] = None
    input: Optional[SecretStr] = None
    traceHeader: Optional[
        constr(regex=r"[\x00-\x7F]*", min_length=0, max_length=256)
    ] = None


class StopExecutionOutput(BaseModel):
    stopDate: datetime


class StopExecutionInput(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    error: Optional[SecretStr] = None
    cause: Optional[SecretStr] = None


class UntagResourceInput(BaseModel):
    resourceArn: constr(min_length=1, max_length=256)
    tagKeys: List[constr(min_length=1, max_length=128)]


class UpdateMapRunInput(BaseModel):
    mapRunArn: constr(min_length=1, max_length=2000)
    maxConcurrency: Optional[conint(ge=0)] = None
    toleratedFailurePercentage: Optional[confloat(ge=0.0, le=100.0)] = None
    toleratedFailureCount: Optional[conint(ge=0)] = None


class UpdateStateMachineOutput(BaseModel):
    updateDate: datetime


class ActivityListItem(BaseModel):
    activityArn: constr(min_length=1, max_length=256)
    name: constr(min_length=1, max_length=80)
    creationDate: datetime


class HistoryEventExecutionDataDetails(BaseModel):
    truncated: Optional[bool] = None


class ActivityScheduledEventDetails(BaseModel):
    resource: constr(min_length=1, max_length=256)
    input: Optional[SecretStr] = None
    inputDetails: Optional[HistoryEventExecutionDataDetails] = None
    timeoutInSeconds: Optional[int] = None
    heartbeatInSeconds: Optional[int] = None


class ActivitySucceededEventDetails(BaseModel):
    output: Optional[SecretStr] = None
    outputDetails: Optional[HistoryEventExecutionDataDetails] = None


class LoggingConfiguration(BaseModel):
    level: Optional[LogLevel] = None
    includeExecutionData: Optional[bool] = None
    destinations: Optional[List[LogDestination]] = None


class TracingConfiguration(BaseModel):
    enabled: Optional[bool] = None


class MapRunItemCounts(BaseModel):
    pending: conint(ge=0)
    running: conint(ge=0)
    succeeded: conint(ge=0)
    failed: conint(ge=0)
    timedOut: conint(ge=0)
    aborted: conint(ge=0)
    total: conint(ge=0)
    resultsWritten: conint(ge=0)


class MapRunExecutionCounts(BaseModel):
    pending: conint(ge=0)
    running: conint(ge=0)
    succeeded: conint(ge=0)
    failed: conint(ge=0)
    timedOut: conint(ge=0)
    aborted: conint(ge=0)
    total: conint(ge=0)
    resultsWritten: conint(ge=0)


class ExecutionListItem(BaseModel):
    executionArn: constr(min_length=1, max_length=256)
    stateMachineArn: constr(min_length=1, max_length=256)
    name: constr(min_length=1, max_length=80)
    status: ExecutionStatus
    startDate: datetime
    stopDate: Optional[datetime] = None
    mapRunArn: Optional[constr(min_length=1, max_length=2000)] = None
    itemCount: Optional[conint(ge=0)] = None


class ExecutionStartedEventDetails(BaseModel):
    input: Optional[SecretStr] = None
    inputDetails: Optional[HistoryEventExecutionDataDetails] = None
    roleArn: Optional[constr(min_length=1, max_length=256)] = None


class ExecutionSucceededEventDetails(BaseModel):
    output: Optional[SecretStr] = None
    outputDetails: Optional[HistoryEventExecutionDataDetails] = None


class TaskScheduledEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)
    region: constr(min_length=1, max_length=80)
    parameters: SecretStr
    timeoutInSeconds: Optional[int] = None
    heartbeatInSeconds: Optional[int] = None
    taskCredentials: Optional[TaskCredentials] = None


class TaskSubmittedEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)
    output: Optional[SecretStr] = None
    outputDetails: Optional[HistoryEventExecutionDataDetails] = None


class TaskSucceededEventDetails(BaseModel):
    resourceType: constr(min_length=1, max_length=80)
    resource: constr(min_length=1, max_length=80)
    output: Optional[SecretStr] = None
    outputDetails: Optional[HistoryEventExecutionDataDetails] = None


class LambdaFunctionScheduledEventDetails(BaseModel):
    resource: constr(min_length=1, max_length=256)
    input: Optional[SecretStr] = None
    inputDetails: Optional[HistoryEventExecutionDataDetails] = None
    timeoutInSeconds: Optional[int] = None
    taskCredentials: Optional[TaskCredentials] = None


class LambdaFunctionSucceededEventDetails(BaseModel):
    output: Optional[SecretStr] = None
    outputDetails: Optional[HistoryEventExecutionDataDetails] = None


class StateEnteredEventDetails(BaseModel):
    name: constr(min_length=1, max_length=80)
    input: Optional[SecretStr] = None
    inputDetails: Optional[HistoryEventExecutionDataDetails] = None


class StateExitedEventDetails(BaseModel):
    name: constr(min_length=1, max_length=80)
    output: Optional[SecretStr] = None
    outputDetails: Optional[HistoryEventExecutionDataDetails] = None


class HistoryEvent(BaseModel):
    timestamp: datetime
    type: HistoryEventType
    id: int
    previousEventId: Optional[int] = None
    activityFailedEventDetails: Optional[ActivityFailedEventDetails] = None
    activityScheduleFailedEventDetails: Optional[ActivityScheduleFailedEventDetails] = (
        None
    )
    activityScheduledEventDetails: Optional[ActivityScheduledEventDetails] = None
    activityStartedEventDetails: Optional[ActivityStartedEventDetails] = None
    activitySucceededEventDetails: Optional[ActivitySucceededEventDetails] = None
    activityTimedOutEventDetails: Optional[ActivityTimedOutEventDetails] = None
    taskFailedEventDetails: Optional[TaskFailedEventDetails] = None
    taskScheduledEventDetails: Optional[TaskScheduledEventDetails] = None
    taskStartFailedEventDetails: Optional[TaskStartFailedEventDetails] = None
    taskStartedEventDetails: Optional[TaskStartedEventDetails] = None
    taskSubmitFailedEventDetails: Optional[TaskSubmitFailedEventDetails] = None
    taskSubmittedEventDetails: Optional[TaskSubmittedEventDetails] = None
    taskSucceededEventDetails: Optional[TaskSucceededEventDetails] = None
    taskTimedOutEventDetails: Optional[TaskTimedOutEventDetails] = None
    executionFailedEventDetails: Optional[ExecutionFailedEventDetails] = None
    executionStartedEventDetails: Optional[ExecutionStartedEventDetails] = None
    executionSucceededEventDetails: Optional[ExecutionSucceededEventDetails] = None
    executionAbortedEventDetails: Optional[ExecutionAbortedEventDetails] = None
    executionTimedOutEventDetails: Optional[ExecutionTimedOutEventDetails] = None
    mapStateStartedEventDetails: Optional[MapStateStartedEventDetails] = None
    mapIterationStartedEventDetails: Optional[MapIterationEventDetails] = None
    mapIterationSucceededEventDetails: Optional[MapIterationEventDetails] = None
    mapIterationFailedEventDetails: Optional[MapIterationEventDetails] = None
    mapIterationAbortedEventDetails: Optional[MapIterationEventDetails] = None
    lambdaFunctionFailedEventDetails: Optional[LambdaFunctionFailedEventDetails] = None
    lambdaFunctionScheduleFailedEventDetails: Optional[
        LambdaFunctionScheduleFailedEventDetails
    ] = None
    lambdaFunctionScheduledEventDetails: Optional[
        LambdaFunctionScheduledEventDetails
    ] = None
    lambdaFunctionStartFailedEventDetails: Optional[
        LambdaFunctionStartFailedEventDetails
    ] = None
    lambdaFunctionSucceededEventDetails: Optional[
        LambdaFunctionSucceededEventDetails
    ] = None
    lambdaFunctionTimedOutEventDetails: Optional[LambdaFunctionTimedOutEventDetails] = (
        None
    )
    stateEnteredEventDetails: Optional[StateEnteredEventDetails] = None
    stateExitedEventDetails: Optional[StateExitedEventDetails] = None
    mapRunStartedEventDetails: Optional[MapRunStartedEventDetails] = None
    mapRunFailedEventDetails: Optional[MapRunFailedEventDetails] = None


class CreateActivityInput(BaseModel):
    name: constr(min_length=1, max_length=80)
    tags: Optional[List[Tag]] = None


class CreateStateMachineInput(BaseModel):
    name: constr(min_length=1, max_length=80)
    definition: SecretStr
    roleArn: constr(min_length=1, max_length=256)
    type: Optional[StateMachineType] = None
    loggingConfiguration: Optional[LoggingConfiguration] = None
    tags: Optional[List[Tag]] = None
    tracingConfiguration: Optional[TracingConfiguration] = None


class DescribeMapRunOutput(BaseModel):
    mapRunArn: constr(min_length=1, max_length=2000)
    executionArn: constr(min_length=1, max_length=256)
    status: MapRunStatus
    startDate: datetime
    stopDate: Optional[datetime] = None
    maxConcurrency: conint(ge=0)
    toleratedFailurePercentage: confloat(ge=0.0, le=100.0)
    toleratedFailureCount: conint(ge=0)
    itemCounts: MapRunItemCounts
    executionCounts: MapRunExecutionCounts


class DescribeStateMachineOutput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)
    name: constr(min_length=1, max_length=80)
    status: Optional[StateMachineStatus] = None
    definition: SecretStr
    roleArn: constr(min_length=1, max_length=256)
    type: StateMachineType
    creationDate: datetime
    loggingConfiguration: Optional[LoggingConfiguration] = None
    tracingConfiguration: Optional[TracingConfiguration] = None
    label: Optional[str] = None


class DescribeStateMachineForExecutionOutput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)
    name: constr(min_length=1, max_length=80)
    definition: SecretStr
    roleArn: constr(min_length=1, max_length=256)
    updateDate: datetime
    loggingConfiguration: Optional[LoggingConfiguration] = None
    tracingConfiguration: Optional[TracingConfiguration] = None
    mapRunArn: Optional[constr(min_length=1, max_length=2000)] = None
    label: Optional[str] = None


class ListActivitiesOutput(BaseModel):
    activities: List[ActivityListItem]
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None


class ListExecutionsOutput(BaseModel):
    executions: List[ExecutionListItem]
    nextToken: Optional[constr(min_length=1, max_length=3096)] = None


class ListMapRunsOutput(BaseModel):
    mapRuns: List[MapRunListItem]
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None


class ListStateMachinesOutput(BaseModel):
    stateMachines: List[StateMachineListItem]
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None


class ListTagsForResourceOutput(BaseModel):
    tags: Optional[List[Tag]] = None


class TagResourceInput(BaseModel):
    resourceArn: constr(min_length=1, max_length=256)
    tags: List[Tag]


class UpdateStateMachineInput(BaseModel):
    stateMachineArn: constr(min_length=1, max_length=256)
    definition: Optional[SecretStr] = None
    roleArn: Optional[constr(min_length=1, max_length=256)] = None
    loggingConfiguration: Optional[LoggingConfiguration] = None
    tracingConfiguration: Optional[TracingConfiguration] = None


class GetExecutionHistoryOutput(BaseModel):
    events: List[HistoryEvent] = Field(
        ...,
        description="Contains details about the events that occurred during an execution.",
    )
    nextToken: Optional[constr(min_length=1, max_length=1024)] = None
